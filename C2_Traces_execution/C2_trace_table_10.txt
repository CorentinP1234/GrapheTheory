* Création du graphe d'ordonnancement C2_table_10 :

   10 sommets
   16 arcs
   0 -> 1 = 0
   1 -> 2 = 2
   2 -> 3 = 3
   1 -> 4 = 2
   2 -> 4 = 3
   1 -> 5 = 2
   4 -> 5 = 6
   4 -> 6 = 6
   5 -> 6 = 2
   3 -> 7 = 5
   5 -> 7 = 2
   2 -> 8 = 3
   4 -> 8 = 6
   7 -> 8 = 6
   8 -> 9 = 1
   6 -> 9 = 1

* Matrice des valeurs de C2_table_10 :

       0  1  2  3  4  5  6  7  8  9 
    0| .  0  .  .  .  .  .  .  .  . |
    1| .  .  2  .  2  2  .  .  .  . |
    2| .  .  .  3  3  .  .  .  3  . |
    3| .  .  .  .  .  .  .  5  .  . |
    4| .  .  .  .  .  6  6  .  6  . |
    5| .  .  .  .  .  .  2  2  .  . |
    6| .  .  .  .  .  .  .  .  .  1 |
    7| .  .  .  .  .  .  .  .  6  . |
    8| .  .  .  .  .  .  .  .  .  1 |
    9| .  .  .  .  .  .  .  .  .  . |

> Il y a un seul point d'entré, 0
> Il y a un seul point de sortie, 9

* Détection de circuit :
Méthode d'élimination des points d'entrée

   Noeud sans prédecesseurs : 0 
   Point d'entrée : 0 
   Suppression des points d'entrée
   Sommets restant : 1 2 3 4 5 6 7 8 9 
   Noeud sans prédecesseurs : 1 
   Point d'entrée : 1 
   Suppression des points d'entrée
   Sommets restant : 2 3 4 5 6 7 8 9 
   Noeud sans prédecesseurs : 2 
   Point d'entrée : 2 
   Suppression des points d'entrée
   Sommets restant : 3 4 5 6 7 8 9 
   Noeud sans prédecesseurs : 3 4 
   Point d'entrée : 3 4 
   Suppression des points d'entrée
   Sommets restant : 5 6 7 8 9 
   Noeud sans prédecesseurs : 5 
   Point d'entrée : 5 
   Suppression des points d'entrée
   Sommets restant : 6 7 8 9 
   Noeud sans prédecesseurs : 6 7 
   Point d'entrée : 6 7 
   Suppression des points d'entrée
   Sommets restant : 8 9 
   Noeud sans prédecesseurs : 8 
   Point d'entrée : 8 
   Suppression des points d'entrée
   Sommets restant : 9 
   Noeud sans prédecesseurs : 9 
   Point d'entrée : 9 
   Suppression des points d'entrée
   Sommets restant : Aucun

> Il n'y a pas de cycle
> Les valeurs pour tous les arcs incidents vers l'extérieur à un sommet sont identiques
> Il n'y a pas d'arc négatifs
> L'arc 0->1 est nul
> C'est un graphe d'ordonnancement

* Tri topologique:
Rangs:    0   1   2   3   3   4   5   5   6   7
Taches:   0   1   2   3   4   5   6   7   8   9

* Calendriers :

    Taches   Dates au plus tot   Dates au plus tard 
  |   0    |         0         |          0         |
  |   1    |         0         |          0         |
  |   2    |         2         |          2         |
  |   3    |         5         |          8         |
  |   4    |         5         |          5         |
  |   5    |        11         |         11         |
  |   6    |        13         |         19         |
  |   7    |        13         |         13         |
  |   8    |        19         |         19         |
  |   9    |        20         |         20         |


* Marges :

    Taches   Marges Totales   Marges Libres 
  |   0    |       0        |       0       |
  |   1    |       0        |       0       |
  |   2    |       0        |       0       |
  |   3    |       3        |       3       |
  |   4    |       0        |       0       |
  |   5    |       0        |       0       |
  |   6    |       6        |       6       |
  |   7    |       0        |       0       |
  |   8    |       0        |       0       |
  |   9    |       0        |       0       |

* Chemins critiques:
> 0->1->2->8->9
> 0->1->4->8->9
> 0->1->2->4->8->9
> 0->1->5->7->8->9
> 0->1->4->5->7->8->9
> 0->1->2->4->5->7->8->9

Le plus long chemin critique est : 
> 0->1->2->4->5->7->8->9
de longueur 20 jours. 
Il faudra au minimum 20 jours pour réaliser le projet C2_table_10.

> Programme terminé
